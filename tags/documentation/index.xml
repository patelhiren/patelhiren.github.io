<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Documentation on Hiren Patel</title>
    <link>https://patelhiren.com/tags/documentation/</link>
    <description>Recent content in Documentation on Hiren Patel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Copyright {year}, Hiren Patel</copyright>
    <lastBuildDate>Fri, 24 Apr 2020 12:06:38 -0400</lastBuildDate>
    
	<atom:link href="https://patelhiren.com/tags/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using mermaid-js to generate Flow Charts</title>
      <link>https://patelhiren.com/blog/using-mermaid-js-to-generate-flow-charts/</link>
      <pubDate>Fri, 24 Apr 2020 12:06:38 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/using-mermaid-js-to-generate-flow-charts/</guid>
      <description>&lt;p&gt;I often need to document a flow chart for new features I am planning to implement. Usually generating flow chart needed me to go to an application that would let me draw rectangles, text, etc. Today I learned about &lt;a href=&#34;https://github.com/mermaid-js/mermaid&#34;title=&#34;mermaid-js GitHub Page&#34;target=&#34;_blank&#34;&gt;mermaid-js&lt;/a&gt; which allows one to use Markdown like syntax to generte various diagrams including flow charts.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I often need to document a flow chart for new features I am planning to implement. Usually generating flow chart needed me to go to an application that would let me draw rectangles, text, etc. Today I learned about <a href="https://github.com/mermaid-js/mermaid"title="mermaid-js GitHub Page"target="_blank">mermaid-js</a> which allows one to use Markdown like syntax to generte various diagrams including flow charts.</p>
<p>There is a live editor available at <a href="https://mermaidjs.github.io/mermaid-live-editor/">https://mermaidjs.github.io/mermaid-live-editor/</a> that allows you to to enter Markdown like text and generate a PNG/SVG output that you can download and embed in your documentation.</p>
<pre><code class="language-mermaid" data-lang="mermaid">graph TD
A[Christmas] --&gt;|Get money| B(Go shopping)
B --&gt; C{Let me think}
C --&gt;|One| D[Laptop]
C --&gt;|Two| E[iPhone]
C --&gt;|Three| F[fa:fa-car Car]
</code></pre><p>The embedded code block above would generate a flow chart image like the one below.</p>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/mermaid-diagram.png">
            <picture>

                    <source 
                        srcset="
                        
                        
                        

                        

                        

                        /blog/using-mermaid-js-to-generate-flow-charts/images/Dark/mermaid-diagram.png
                        "
                        media="(prefers-color-scheme: dark)"
                    /><source 
                    srcset="
                    
                    
                    

                    

                    

                    /blog/using-mermaid-js-to-generate-flow-charts/images/mermaid-diagram.png
                    " 
                />
                
                <img alt="mermaid - flow chart" 
                        src="/blog/using-mermaid-js-to-generate-flow-charts/images/mermaid-diagram.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<p>mermaid-js supports generating</p>
<ul>
<li>Flow Chart</li>
<li>Sequence Diagram</li>
<li>Class Diagram</li>
<li>State Diagram</li>
<li>Gantt Chart</li>
<li>Pie Chart</li>
<li>ER Diagram</li>
</ul>
<p>Documentation is available at <a href="https://mermaid-js.github.io/mermaid">https://mermaid-js.github.io/mermaid</a>.</p>]]></content:encoded>
      
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blogs on Hiren Patel</title>
    <link>https://patelhiren.com/blog/</link>
    <description>Recent content in Blogs on Hiren Patel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Copyright {year}, Hiren Patel</copyright>
    <lastBuildDate>Sun, 13 Nov 2022 16:32:58 -0500</lastBuildDate>
    
	<atom:link href="https://patelhiren.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Set up Foscam Floodlight Camera in HomeKit</title>
      <link>https://patelhiren.com/blog/set-up-foscam-floodlight-camera-in-homekit/</link>
      <pubDate>Sun, 13 Nov 2022 16:32:58 -0500</pubDate>
      
      <guid>https://patelhiren.com/blog/set-up-foscam-floodlight-camera-in-homekit/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://www.amazon.com/Foscam-Floodlight-Detection-Brightness-FLC/dp/B095S3HVL4&#34;target=&#34;_blank&#34;&gt;Foscam Floodlight Camera&lt;/a&gt; is competitively prized and has decent features including option to record 24/7 video locally to a micro sdcard without the need for a cloud subscription. It however does not support integration with HomeKit my preferred home automation platform. Here is how I setup the floodlight in HomeKit.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>The <a href="https://www.amazon.com/Foscam-Floodlight-Detection-Brightness-FLC/dp/B095S3HVL4"target="_blank">Foscam Floodlight Camera</a> is competitively prized and has decent features including option to record 24/7 video locally to a micro sdcard without the need for a cloud subscription. It however does not support integration with HomeKit my preferred home automation platform. Here is how I setup the floodlight in HomeKit.</p>
<p>Download and install the <a href="https://apps.apple.com/us/app/foscam-vms/id1521202507?mt=12"target="_blank">Foscam VMS</a> app from the Mac App Store. Signup and Signin to the Foscam Account.</p>
<p>We will also need the <a href="https://apps.apple.com/us/app/foscam/id924381688"target="_blank">Foscam</a> iOS app.</p>
<blockquote>
<p>We need both macOS and iOS apps because unfortunately certain settings are only available in the macOS app where others are only available in the iOS app.</p>
</blockquote>
<h2 id="foscam-vms-macos-app-settings">Foscam VMS (macOS) App Settings</h2>
<p>Once the camera is setup and available in the Foscam VMS app, goto the the camera settings by clicking the settings icon next to the camera name.</p>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/01.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/01_hu853bb27bd1b324fe59a0c60064c89f3d_150692_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/01_hu853bb27bd1b324fe59a0c60064c89f3d_150692_600x0_resize_box_3.png 600w,
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/01.png
                    " 
                />
                
                <img alt="Open Camera Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/01.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Open Camera Settings</span>
    </span>
</span></a></p>
<p>Set the settings like so:</p>
<h5 id="basic-settings">Basic Settings</h5>
<ul>
<li>Set Device name and Device time.</li>
<li>Disable Voice prompt.</li>
</ul>
<h5 id="video-settings">Video Settings</h5>
<ul>
<li>Set Video encode settings like below. Set both the Main stream and Sub stream settings like the one in the screenshot. You make choose to use QHD stream type if you prefer 2K resolution, however I found the response time to be slower in HomeKit with that.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/02.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/02_hu45c9a15eab44f340f9ad6c49725a8eb8_565696_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/02_hu45c9a15eab44f340f9ad6c49725a8eb8_565696_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/02_hu45c9a15eab44f340f9ad6c49725a8eb8_565696_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/02_hu45c9a15eab44f340f9ad6c49725a8eb8_565696_1000x0_resize_box_3.png 1200w,
                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/02.png
                    " 
                />
                
                <img alt="Video encode Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/02.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Video Encode Settings</span>
    </span>
</span></a></p>
<ul>
<li>Set <em>On screen display</em> -&gt; <em>Display timestamp</em> to Yes.</li>
<li>Set <em>Privacy zone</em> -&gt; <em>Privacy zone</em> to Yes.</li>
</ul>
<blockquote>
<p>We are going to be using the <em>Privacy zone</em> to make the <em>On screen time display</em> readable. You can drag the privacy zone around the time area, but I found the drag operation to be very hard due to responsiveness issues. We will instead use Foscam CGI Command to set the privacy zone later in the section.</p>
</blockquote>
<ul>
<li>I found the default colors to be oversaturated so I tweaked the <em>Color adjustment</em> like below.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/03.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/03_hu7921c6876f50425bbc3d1805b7b5ded3_536721_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/03_hu7921c6876f50425bbc3d1805b7b5ded3_536721_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/03_hu7921c6876f50425bbc3d1805b7b5ded3_536721_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/03_hu7921c6876f50425bbc3d1805b7b5ded3_536721_1000x0_resize_box_3.png 1200w,
                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/03.png
                    " 
                />
                
                <img alt="Color Adjustment Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/03.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Color Adjustment Settings</span>
    </span>
</span></a></p>
<h5 id="detector-settings">Detector Settings</h5>
<ul>
<li>I found the camera&rsquo;s onboard motion detector to be too conservative for my liking so I disabled the <em>Motion Detection</em> &amp; <em>Sound Detection</em> under the <em>Detector</em> settings. The only setting turned on is the <em>PIR Detection</em>.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/04.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/04_hu7921c6876f50425bbc3d1805b7b5ded3_597799_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/04_hu7921c6876f50425bbc3d1805b7b5ded3_597799_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/04_hu7921c6876f50425bbc3d1805b7b5ded3_597799_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/04_hu7921c6876f50425bbc3d1805b7b5ded3_597799_1000x0_resize_box_3.png 1200w,
                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/04.png
                    " 
                />
                
                <img alt="PIR Detection Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/04.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">PIR Detection Settings</span>
    </span>
</span></a></p>
<h5 id="record-settings">Record Settings</h5>
<ul>
<li>Enable <em>SD card</em> option under <em>Record</em>.</li>
<li>Under <em>Schedule Recording</em> I enabled 24/7 Recording including Audio by tapping the <em>All</em> area in the <em>Schedule</em> table.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/05.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/05_hu7921c6876f50425bbc3d1805b7b5ded3_582863_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/05_hu7921c6876f50425bbc3d1805b7b5ded3_582863_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/05_hu7921c6876f50425bbc3d1805b7b5ded3_582863_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/05_hu7921c6876f50425bbc3d1805b7b5ded3_582863_1000x0_resize_box_3.png 1200w,
                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/05.png
                    " 
                />
                
                <img alt="Record Schedule Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/05.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Record Schedule Settings</span>
    </span>
</span></a></p>
<p>Save and close the Camera Settings window.</p>
<h2 id="making-the-onscreen-time-readable">Making the Onscreen Time Readable</h2>
<p>By default the onscreen time has not background and so it is overlayed directly on the video. This makes the time in the video hard to read. In order to fix this we use the Privacy zone and setup a rectangle around the time. This way it will alway have a black background behind the time, improving readablity.</p>
<p>Run the below command adjusting values for the <code>camera-ip</code>, <code>camera-user-name</code>, and <code>camera-user-password</code> to setup the privacy rectangle behind time.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">curl <span class="s2">&#34;http://&lt;&lt;camera-ip&gt;&gt;:88/cgi-bin/CGIProxy.fcgi?cmd=setOsdMaskArea&amp;x1_0=20&amp;y1_0=90&amp;x2_0=2080&amp;y2_0=450&amp;usr=&lt;&lt;camera-user-name&gt;&gt;&amp;pwd=&lt;&lt;camera-user-password&gt;&gt;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/06.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/06_hude89e665e76fe7391d6a202628be8224_27127_400x0_resize_box_3.png 400w,
                    
                    
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/06.png
                    " 
                />
                
                <img alt="Readable Time" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/06.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Readable Time</span>
    </span>
</span></a></p>
<h2 id="foscam-ios-app-settings">Foscam (iOS) App Settings</h2>
<ul>
<li>Load the Camera Settings by tapping the <em>&hellip;</em> button and tapping <em>Settings</em>.</li>
<li>Select <em>Advanced Settings</em>.</li>
<li>Automatic firmware updates are on by default. Disable them under <em>Smart Update</em>.</li>
<li>Enable <em>Onvif</em></li>
<li>Under <em>NVR Connection</em> Enable <em>NVR Model</em></li>
</ul>
<blockquote>
<p>When NVR and ONVIF are enabled, the stream switches to H264 which is required for HomeKit integration. Without that the default stream format is H265 which is incompatible with HomeKit.</p>
</blockquote>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/07.png">
            <picture><source 
                    srcset="
                    
                    
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/07.png
                    " 
                />
                
                <img alt="Onvif Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/07.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Onvif Settings</span>
    </span>
</span></a>


<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/08.png">
            <picture><source 
                    srcset="
                    
                    
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/08.png
                    " 
                />
                
                <img alt="NVR Connection Settings" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/08.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">NVR Connection Settings</span>
    </span>
</span></a></p>
<h2 id="adding-the-camera-to-scrypted">Adding the camera to Scrypted</h2>
<p>We will be using the excellent <a href="https://www.scrypted.app"target="_blank">Scrypted</a> platform to access this camera from HomeKit and also enable HomeKit Secure Video. I have Scrypted running in a Docker container on a Ubuntu server.</p>
<p>Under Scrypted install the below plugins.</p>
<ul>
<li><strong>HomeKit</strong> - For exposing camera to HomeKit</li>
<li><strong>RTSP Camera Plugin</strong> - For connecting to Foscam floodlight camera via RTSP stream.</li>
<li><strong>Open CV Motion Detection</strong> - To expose custom motion detection sensing via OpenCV so Home Hub can process motion and record clips to HomeKit Secure Video.</li>
<li><strong>Dummy Switch Plugin</strong> - To control the floodlight via HomeKit.</li>
</ul>
<h5 id="rtsp-camera-plugin-setup">RTSP Camera Plugin Setup</h5>
<ul>
<li>Navigate to <em>RTSP Camera Plugin</em> page and click <em>Add Device</em>.</li>
<li>Enter a name for your camera and click <em>Create</em></li>
<li>Under the newly loaded device page in the <em>General</em> tab, click the <em>Add</em> button so you have a place to enter two <em>RTSP Stream URL</em>. Enter the information for
<ul>
<li>Username - The camera username</li>
<li>Password - The camera password</li>
<li>RTSP Stream URL - <code>http://&lt;&lt;camera-ip-address&gt;&gt;:88/videoMain</code></li>
<li>RTSP Stream URL - <code>http://&lt;&lt;camera-ip-address&gt;&gt;:88/videoSub</code></li>
</ul>
</li>
<li>Click <em>Save RTSP Stream URL</em> and the <em>Save</em> button.</li>
<li>Refresh the Page. This should load the snapshot of the camera and also show additional tabs.</li>
<li>Switch to the <em>Stream Management</em> tab and change the <em>Low Resolution Stream</em> value to <em>Stream 2</em>.</li>
<li>Switch to the <em>Integrations and Extensions</em> tab and check <em>OpenCV Motion Detection</em> and <em>HomeKit</em>. Refresh the page. The integrations should look like the below screenshot.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/09.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/09_hu1545f44c94899c8663f069a20004a980_74130_400x0_resize_box_3.png 400w,
                    
                    
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/09.png
                    " 
                />
                
                <img alt="Integrations and Extensions" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/09.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Integrations and Extensions</span>
    </span>
</span></a></p>
<ul>
<li>Switch to the <em>OpenCV Motion Detection</em> tab and set the settings as you wish to tweak. For my setup I only changed the <em>Frame Analysis Interval</em> from <em>250</em> to <em>100</em>.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/10.png">
            <picture><source 
                    srcset="
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/10_hu4422e58e64253367b757ff5eab7e62a3_146668_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/10_hu4422e58e64253367b757ff5eab7e62a3_146668_600x0_resize_box_3.png 600w,
                    

                    

                    

                    /blog/set-up-foscam-floodlight-camera-in-homekit/images/10.png
                    " 
                />
                
                <img alt="OpenCV Motion Detection" 
                        src="/blog/set-up-foscam-floodlight-camera-in-homekit/images/10.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">OpenCV Motion Detection</span>
    </span>
</span></a></p>
<ul>
<li>Switch to the HomeKit Pairing tab and make sure the <em>Standalone Accessory Mode</em> is checked.</li>
<li>You may now add the camera to HomeKit. The QR Code to pair with HomeKit will be available under the HomeKit tab of the camera under Scrypted.</li>
</ul>
<h2 id="adding-a-switch-to-control-the-floodlight">Adding a Switch to control the Floodlight</h2>
<ul>
<li>Goto the <em>Dummy Switch Plugin</em> page and click <em>Add Device</em> to add a new switch device.</li>
<li>Set the <em>Reset Sensor</em> value to zero to make it a manual switch, instead of a switch that resets state after 10 seconds.</li>
<li>Enable HomeKit integration, set HomeKit Pairing to Standalone mode and pair with HomeKit.</li>
<li>The switch will not do anything if tapped on. To fix this we have to create <em>Automations</em> that will be triggered when the switch is turned on or off.</li>
</ul>
<h2 id="defining-automation-to-control-the-floodlight-via-dummy-switch">Defining Automation to control the Floodlight via Dummy Switch</h2>
<ul>
<li>From the Scrypted Menu, navigate to <em>Automations-&gt;Create Automation</em>.</li>
<li>On the <em>General</em> tab, check the <em>Run Automations to Completion</em> checkbox.</li>
<li>On the <em>Edit</em> tab set the Name to an appropriate name like &ldquo;Turn on Floodlight&rdquo;.</li>
<li>In <em>Automation Triggers</em> setion select your Dummy Switch (On|Off) from the dropdown.</li>
<li>For <em>Trigger Condition</em>, enter <code>eventData === true</code> and click <em>Save Trigger</em></li>
<li>For <em>Automation Actions</em>, select <em>Run Shell Script</em> from the dropdown.</li>
<li>The script to turn on the floodlight is</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>curl <span class="s2">&#34;http://&lt;&lt;camera-ip-address&gt;&gt;:88/cgi-bin/CGIProxy.fcgi?cmd=openWhiteLight&amp;usr=&lt;&lt;camera-user-name&gt;&gt;&amp;pwd=&lt;&lt;camera-user-password&gt;&gt;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Similarly create another automation, but this time for <em>Trigger Condition</em> <code>eventData === false</code>.</li>
<li>The script to turn off the floodlight is</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>curl <span class="s2">&#34;http://&lt;&lt;camera-ip-address&gt;&gt;:88/cgi-bin/CGIProxy.fcgi?cmd=closeWhiteLight&amp;usr=&lt;&lt;camera-user-name&gt;&gt;&amp;pwd=&lt;&lt;camera-user-password&gt;&gt;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This will now make the switch trigger the approrpriate automation to turn the floodlight on/off.</p>
<p>Overall this setup is working very well and HomeKit recognizes People/Pets/Vehicles and Packages pretty well and quickly.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Setting up Keras Tensorflow2 on M1 Mac</title>
      <link>https://patelhiren.com/blog/setting-up-keras-tensorflow2-on-m1-mac/</link>
      <pubDate>Fri, 21 Oct 2022 13:32:11 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/setting-up-keras-tensorflow2-on-m1-mac/</guid>
      <description>&lt;p&gt;I am currently reading &lt;a href=&#34;https://www.amazon.com/gp/product/B0B18D695W&#34;target=&#34;_blank&#34;&gt;Deep Learning with TensorFlow and Keras&lt;/a&gt; to get started with Machine Learning/Deep Learning. Here is how I setup a local &lt;em&gt;Keras/Tensorflow 2.0&lt;/em&gt; environment on my &lt;em&gt;M1 Max MacBook Pro&lt;/em&gt; running &lt;em&gt;macOS 12.6&lt;/em&gt;.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I am currently reading <a href="https://www.amazon.com/gp/product/B0B18D695W"target="_blank">Deep Learning with TensorFlow and Keras</a> to get started with Machine Learning/Deep Learning. Here is how I setup a local <em>Keras/Tensorflow 2.0</em> environment on my <em>M1 Max MacBook Pro</em> running <em>macOS 12.6</em>.</p>
<p>Install <a href="https://docs.conda.io/en/latest/miniconda.html"target="_blank"><em>miniconda</em></a>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">brew install --cask miniconda
</span></span></code></pre></td></tr></table>
</div>
</div><p>I use zsh with <a href="https://iterm2.com"target="_blank">iTerm2</a> as my terminal so I need to initialize conda with the following command.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">conda init zsh
</span></span></code></pre></td></tr></table>
</div>
</div><p>This will make it so everytime iTerm2 is opened, the conda <em>base</em> environment will be activated. I prefer to activate my environment manually, so I did the below to deactivate the base environment on launch of iTerm2.</p>
<p>In <code>~/.zshrc</code> add the following section after the <code># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</code> line.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># Deactivate base conda environment. You can activate an environment using conda activate &lt;&lt;environment-name&gt;&gt;</span>
</span></span><span class="line"><span class="cl">conda deactivate
</span></span></code></pre></td></tr></table>
</div>
</div><p>We now create an environment named <em>tensorflow</em> where we could run our ML/DL Keras training.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">conda create -n tensorflow <span class="nv">python</span><span class="o">=</span>3.9
</span></span></code></pre></td></tr></table>
</div>
</div><p>We then switch to the <em>tensorflow</em> environment and install dependencies.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># Activate tensorflow environment</span>
</span></span><span class="line"><span class="cl">conda activate tensorflow
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install apple tensorflow dependencies</span>
</span></span><span class="line"><span class="cl">conda install -c apple tensorflow-deps
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install tensorflow macos</span>
</span></span><span class="line"><span class="cl">python -m pip install tensorflow-macos
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install tensorflow metal plugin</span>
</span></span><span class="line"><span class="cl">python -m pip install tensorflow-metal
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install tensorflow readymade datasets</span>
</span></span><span class="line"><span class="cl">python -m pip install tensorflow-datasets
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install libjpeg (needed by mathplotlib)</span>
</span></span><span class="line"><span class="cl">brew install libjpeg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install mathplotlib and jupyterlab</span>
</span></span><span class="line"><span class="cl">conda install -y matplotlib jupyterlab
</span></span></code></pre></td></tr></table>
</div>
</div><p>This may not be necessary for future installs. But I ran into an error with numpy when trying to run my notebook code.</p>
<blockquote>
<p><em><strong>module compiled against API version 0x10 but this version of numpy is 0xf</strong></em></p>
</blockquote>
<p>To correct this I had to run this command in my <em>tensorflow</em> environment.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">python -m pip install numpy --upgrade
</span></span></code></pre></td></tr></table>
</div>
</div><p>Another warning I ran into.</p>
<blockquote>
<p><em><strong>TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See <a href="https://ipywidgets.readthedocs.io/en/stable/user_install.html"target="_blank">https://ipywidgets.readthedocs.io/en/stable/user_install.html</a> from .autonotebook import tqdm as notebook_tqdm</strong></em></p>
</blockquote>
<p>To resolve I ran the below in my <em>tensorflow</em> environment.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">python -m pip install ipywidgets widgetsnbextension pandas-profiling
</span></span></code></pre></td></tr></table>
</div>
</div><p>You may now run <code>jupyter notebook</code> command from the <em>tensorflow</em> environment to start the jupyter notebook environment from the command line. I however prefer using <a href="https://code.visualstudio.com/"target="_blank">Visual Studio Code</a> and start an environment under vscode as documented below.</p>
<ul>
<li>Install the <code>Jupyter</code> extension under vscode.</li>
<li>Load the <em>Command Pallet</em> using (<code>Cmd+Shift+P</code>) and select <code>Jupyter: Select Interpreter to Start Jupyter Server</code> and then select <code>Python 3.9.13 ('tensorflow')</code> or whatever environment you want to use.</li>
<li>Load the <em>Command Pallet</em> using (<code>Cmd+Shift+P</code>) and select <code>Create: New Jupyter Notebook</code></li>
<li>You may now run all the Jupyter notebook in vscode. When run the code cell, vscode will start the jupyter server if it is not already started in the selected environment.</li>
</ul>
<h3 id="code">Code</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="nn">tf</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;TensorFlow has access to the following devices:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">device</span> <span class="ow">in</span> <span class="n">tf</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">list_physical_devices</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;* </span><span class="si">{</span><span class="n">device</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="output">Output</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">TensorFlow has access to the following devices:
</span></span><span class="line"><span class="cl">* PhysicalDevice(name=&#39;/physical_device:CPU:0&#39;, device_type=&#39;CPU&#39;)
</span></span><span class="line"><span class="cl">* PhysicalDevice(name=&#39;/physical_device:GPU:0&#39;, device_type=&#39;GPU&#39;)
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Setting Visual Studio Code as default text editor on macOS</title>
      <link>https://patelhiren.com/blog/setting-vscode-as-default-text-editor-on-macos/</link>
      <pubDate>Tue, 23 Mar 2021 22:29:29 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/setting-vscode-as-default-text-editor-on-macos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com&#34;target=&#34;_blank&#34;&gt;Visual Studio Code&lt;/a&gt; is quite capable has become my editor of choice on macOS. Here is how to set it as the default text editor instead of &lt;em&gt;Text Edit&lt;/em&gt;.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p><a href="https://code.visualstudio.com"target="_blank">Visual Studio Code</a> is quite capable has become my editor of choice on macOS. Here is how to set it as the default text editor instead of <em>Text Edit</em>.</p>
<p>Install <a href="https://github.com/moretension/duti"target="_blank">duti</a>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">brew install duti
</span></span></code></pre></td></tr></table>
</div>
</div><p>Set <em>Visual Studio Code</em> as the default editor for all text files and public files by running the below commands using <em>duti</em>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># Mark vscode as default editor for all text files</span>
</span></span><span class="line"><span class="cl">duti -s com.microsoft.VSCode public.plain-text all
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Some files without extensions are considered public.data and not public.text. Set those to open in vscode as well</span>
</span></span><span class="line"><span class="cl">duti -s com.microsoft.VSCode public.data all
</span></span></code></pre></td></tr></table>
</div>
</div><p>The changes should take effect right away and no reboot or relaunch of <em>Finder</em> should be needed.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>macOS and Active Directory Passwords</title>
      <link>https://patelhiren.com/blog/macos-and-active-directory-passwords/</link>
      <pubDate>Sat, 02 Jan 2021 17:30:27 -0500</pubDate>
      
      <guid>https://patelhiren.com/blog/macos-and-active-directory-passwords/</guid>
      <description>&lt;p&gt;Macs connected to Active Directory routinely need to update passwords. When working remote, Active Directory password change is not exactly easy. Here are the steps I follow to update my Active Directory password and keep my local mac password in sync.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>Macs connected to Active Directory routinely need to update passwords. When working remote, Active Directory password change is not exactly easy. Here are the steps I follow to update my Active Directory password and keep my local mac password in sync.</p>
<p>Connect to corporate VPN so that Active Directory is reachable over VPN. Open Terminal and run the following command.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">kpasswd myusername@FULLADDOMAIN.COM
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="go">myusername@FULLADDOMAIN.COM&#39;s Password: 
</span></span></span><span class="line"><span class="cl"><span class="go">New password for myusername@FULLADDOMAIN.COM: 
</span></span></span><span class="line"><span class="cl"><span class="go">Verify password - New password for myusername@FULLADDOMAIN.COM: 
</span></span></span><span class="line"><span class="cl"><span class="go">Success
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Once password change is confirmed, run the following to force sync the updated password to keychain.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">dsconfigad -passinterval <span class="m">0</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Wait about a minute, log out and log back in. You should be logging in with the new password. If login still requires the old password the password sync with active directory did not happen yet. Log back in with the old password, connect to VPN (You will need to use your new password when connecting to VPN) and run the <code>dsconfigad -passinterval 0</code> command and wait a mintue or so before trying to log out/login.</p>
<p>The process once finished will make sure your local keychain password and AD passwords are in sync.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Cross Compiling on macOS via Docker</title>
      <link>https://patelhiren.com/blog/cross-compiling-on-macos-via-docker/</link>
      <pubDate>Wed, 23 Dec 2020 09:31:48 -0500</pubDate>
      
      <guid>https://patelhiren.com/blog/cross-compiling-on-macos-via-docker/</guid>
      <description>&lt;p&gt;I needed to compile an arm64 binary to run on the &lt;a href=&#34;https://store.ui.com/collections/unifi-network-routing-switching/products/udm-pro&#34;target=&#34;_blank&#34;&gt;UniFi Dream Machine Pro&lt;/a&gt;. This is how I used docker to setup cross compilation tools and compile the binary on macOS.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I needed to compile an arm64 binary to run on the <a href="https://store.ui.com/collections/unifi-network-routing-switching/products/udm-pro"target="_blank">UniFi Dream Machine Pro</a>. This is how I used docker to setup cross compilation tools and compile the binary on macOS.</p>
<p>Get and install <a href="https://docs.docker.com/docker-for-mac/install/"target="_blank">Docker Desktop</a> is not already installed. Once installed we can use <a href="https://github.com/dockcross/dockcross"target="_blank">DockCross</a> to setup an cross compile tool chain we want. Here is an example of how I setup the linux-arm64 toolchain.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">mkdir -p ~/Documents/dockcross
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ~/Documents/dockcross
</span></span><span class="line"><span class="cl">docker run --rm dockcross/linux-arm64 &gt; ./dockcross-linux-arm64
</span></span><span class="line"><span class="cl">chmod +x ./dockcross-linux-arm64
</span></span></code></pre></td></tr></table>
</div>
</div><p>This will setup a linux-arm64 cross compiler. To compile files using this compiler you have to place the files in the same directory as the binary. Here is an exaple of how to compile.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">./dockcross-linux-arm64 bash <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>-c <span class="s1">&#39;$CC -s -O3 main.c -o ./udp-broadcast-relay-redux&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Examining the compiled binary with <em>file</em> command should display <em>ARM aarch64</em> architecture.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">file udp-broadcast-relay-redux
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-console" data-lang="console"><span class="line"><span class="cl"><span class="go">udp-broadcast-relay-redux: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), 
</span></span></span><span class="line"><span class="cl"><span class="go">dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 4.10.8, stripped
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p><strong>Note:</strong> Using <em>$CC</em> is important. If you use <em>gcc</em> directly it will compile using <em>x86_64</em> version.</p>
</blockquote>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Dagger 2 Beginner Tutorial</title>
      <link>https://patelhiren.com/blog/dagger-2-beginner-tutorial/</link>
      <pubDate>Fri, 22 May 2020 15:08:53 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/dagger-2-beginner-tutorial/</guid>
      <description>&lt;p&gt;While reviewing an Android project I discovered it was using &lt;a href=&#34;https://dagger.dev&#34;target=&#34;_blank&#34;&gt;Dagger 2&lt;/a&gt; framework. Dagger 2 is a dependency injection framework for Android that is developed by Google. I wanted a quick overview of frameworks major features.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>While reviewing an Android project I discovered it was using <a href="https://dagger.dev"target="_blank">Dagger 2</a> framework. Dagger 2 is a dependency injection framework for Android that is developed by Google. I wanted a quick overview of frameworks major features.</p>
<p>I found the below video series by <a href="https://codinginflow.com"target="_blank">codinginflow.com</a> extermely well done.</p>
<blockquote>
<p><a href="https://codinginflow.com/tutorials/android/dagger-2/part-1-introduction"target="_blank">Watch on codinginflow.com</a></p>
<p><a href="https://www.youtube.com/playlist?list=PLrnPJCHvNZuA2ioi4soDZKz8euUQnJW65"target="_blank">Watch on YouTube</a></p>
<p>&ndash; <em>Florian (codinginflow.com)</em></p>
</blockquote>
<p>He also has a lot of other Android development related series available on his site.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Domain Specific DNS Servers on macOS</title>
      <link>https://patelhiren.com/blog/domain-specific-dns-servers-on-macos/</link>
      <pubDate>Fri, 22 May 2020 14:36:00 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/domain-specific-dns-servers-on-macos/</guid>
      <description>&lt;p&gt;My work has multiple domains (&lt;code&gt;corp.network&lt;/code&gt; and &lt;code&gt;lab.network&lt;/code&gt;) that the nameservers resolve. When in the office the resolution works perfectly. However while conncting over VPN via Tunnelblick the resolution to lab.network was failing.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>My work has multiple domains (<code>corp.network</code> and <code>lab.network</code>) that the nameservers resolve. When in the office the resolution works perfectly. However while conncting over VPN via Tunnelblick the resolution to lab.network was failing.</p>
<p>I could go into my System Preferences-&gt;Network Settings and modify my wifi interface settings to enter a new DNS value for those specific domains. But that felt tedious. Instead I used the below method to specify custom DNS resolver settings for my work domains.</p>
<p>Under <code>/etc/resolver</code> create a file with a name of your choice. I chose <code>corp.netowrk</code> just for clarity.</p>
<p>Here is an example of what the contents could be.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cfg" data-lang="cfg"><span class="line"><span class="cl"><span class="na">domain corp.network</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 10.0.0.1</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 10.0.0.2</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>I could create another file for the lab network with a different dns server.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cfg" data-lang="cfg"><span class="line"><span class="cl"><span class="na">domain lab.network</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 10.0.1.1</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The above would make it so any lookup to <code>xxx.corp.network</code> would use the specified nameserver at <code>10.0.0.1</code> and <code>10.0.0.2</code>.
If I try to access <code>devserver.lab.network</code> it would ask the nameserver at <code>10.0.1.1</code> for its IP.</p>
<p>You could take it a step further and provide backup lookup settings. For example you may have a server located at <code>demo.corp.com</code> that resolves different IPs based on if you are connected to VPN or not. So <code>demo.corp.com</code> should be resolved via VPN nameservers when you are connected to VPN, but via ISP name servers when not connected to VPN. To achive this you could create two files under <code>/etc/resolver</code> like so.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cfg" data-lang="cfg"><span class="line"><span class="cl"><span class="na">domain corp.com</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 10.0.0.1</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 10.0.0.2</span>
</span></span><span class="line"><span class="cl"><span class="na">search_order 1</span>
</span></span><span class="line"><span class="cl"><span class="na">timeout 5</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cfg" data-lang="cfg"><span class="line"><span class="cl"><span class="na">domain corp.com</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 1.1.1.1</span>
</span></span><span class="line"><span class="cl"><span class="na">nameserver 1.0.0.1</span>
</span></span><span class="line"><span class="cl"><span class="na">search_order 2</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The above two files make it so the macOS DNS resolver will first try to use the VPN domains for resolution. If we dont get a response withing 5 seconds, it will fallback to the second file and use <a href="https://1.1.1.1/dns/"target="_blank">Cloudflare DNS</a> to do an internet lookup of the IP address.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Using Tunnelblick to Connect to WatchGuard VPN</title>
      <link>https://patelhiren.com/blog/using-tunnelblick-to-connect-to-watchguard-vpn/</link>
      <pubDate>Sun, 26 Apr 2020 12:55:50 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/using-tunnelblick-to-connect-to-watchguard-vpn/</guid>
      <description>&lt;p&gt;I needed to connect to a corporate VPN that used &lt;a href=&#34;https://www.watchguard.com&#34;target=&#34;_blank&#34;&gt;WatchGuard&lt;/a&gt;. The IT provided &lt;em&gt;Mobile VPN with SSL Client&lt;/em&gt; software did not work reliably on macOS Catalina. It sometimes show connected but unable to access remote vpn resources.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I needed to connect to a corporate VPN that used <a href="https://www.watchguard.com"target="_blank">WatchGuard</a>. The IT provided <em>Mobile VPN with SSL Client</em> software did not work reliably on macOS Catalina. It sometimes show connected but unable to access remote vpn resources.</p>
<p>I discovered that the <em>WatchGuard</em> VPN internally is an OpenVPN server. I use <a href="https://tunnelblick.net"target="_blank">Tunnelblick</a> for my personal OpenVPN connections and that has worked reliably on macOS Catalina. So if I just had the connection <em>ovpn</em> config file I could use <em>Tunnelblick</em> for my VPN connections.</p>
<p>WatchGuard has a detailed support document that walks the user through downloading their software to use for VPN connection at <a href="https://www.watchguard.com/help/docs/fireware/12/en-US/Content/en-US/mvpn/ssl/mvpn_ssl_client-install_c.html"target="_blank">https://www.watchguard.com/help/docs/fireware/12/en-US/Content/en-US/mvpn/ssl/mvpn_ssl_client-install_c.html</a>.</p>
<p>Turns out that page also provides an option to download the <em>ovpn</em> config that can be used with <em>Tunnelblick</em>.</p>
<h2 id="acquiring-the-ovpn-config">Acquiring the OVPN config</h2>
<ul>
<li>Browse to <code>https://&lt;yourvpnserverip:port&gt;/sslvpn.html</code>. You will be greeted with a login page.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/01.jpg">
            <picture><source 
                    srcset="
                    
                    /blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/01_hu657c574761ea48e57c808b0297ce1c55_28832_400x0_resize_q75_box.jpg 400w,
                    
                    
                    

                    

                    

                    /blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/01.jpg
                    " 
                />
                
                <img alt="WatchGuard - Login Page" 
                        src="/blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/01.jpg" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">WatchGuard - Login Page</span>
    </span>
</span></a></p>
<ul>
<li>Login using your corporate credentials.</li>
<li>You will be offered a download page.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/02.jpg">
            <picture><source 
                    srcset="
                    
                    /blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/02_hu3d03a01dcc18bc5be0e67db3d8d209a6_168343_400x0_resize_q75_box.jpg 400w,
                    
                    
                    

                    

                    

                    /blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/02.jpg
                    " 
                />
                
                <img alt="WatchGuard - Download Page" 
                        src="/blog/using-tunnelblick-to-connect-to-watchguard-vpn/images/02.jpg" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">WatchGuard - Download Page</span>
    </span>
</span></a></p>
<ul>
<li>Select the <strong><em>Download</em></strong> option under <em>Mobile VPN with SSL client profile</em>.</li>
<li>This will offer a <em>client.ovpn</em> file that you can import into <em>Tunnelblick</em> for connection to your corporate network.</li>
</ul>
<p>The page offer options to download the Mobile VPN with SSL Client software for Mac and Windows as well if you want those.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Using mermaid-js to generate Flow Charts</title>
      <link>https://patelhiren.com/blog/using-mermaid-js-to-generate-flow-charts/</link>
      <pubDate>Fri, 24 Apr 2020 12:06:38 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/using-mermaid-js-to-generate-flow-charts/</guid>
      <description>&lt;p&gt;I often need to document a flow chart for new features I am planning to implement. Usually generating flow chart needed me to go to an application that would let me draw rectangles, text, etc. Today I learned about &lt;a href=&#34;https://github.com/mermaid-js/mermaid&#34;title=&#34;mermaid-js GitHub Page&#34;target=&#34;_blank&#34;&gt;mermaid-js&lt;/a&gt; which allows one to use Markdown like syntax to generte various diagrams including flow charts.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I often need to document a flow chart for new features I am planning to implement. Usually generating flow chart needed me to go to an application that would let me draw rectangles, text, etc. Today I learned about <a href="https://github.com/mermaid-js/mermaid"title="mermaid-js GitHub Page"target="_blank">mermaid-js</a> which allows one to use Markdown like syntax to generte various diagrams including flow charts.</p>
<p>There is a live editor available at <a href="https://mermaidjs.github.io/mermaid-live-editor/"target="_blank">https://mermaidjs.github.io/mermaid-live-editor/</a> that allows you to to enter Markdown like text and generate a PNG/SVG output that you can download and embed in your documentation.</p>
<pre tabindex="0"><code class="language-mermaid" data-lang="mermaid">graph TD
A[Christmas] --&gt;|Get money| B(Go shopping)
B --&gt; C{Let me think}
C --&gt;|One| D[Laptop]
C --&gt;|Two| E[iPhone]
C --&gt;|Three| F[fa:fa-car Car]
</code></pre><p>The embedded code block above would generate a flow chart image like the one below.</p>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/mermaid-diagram.png">
            <picture>

                    <source 
                        srcset="
                        
                        
                        

                        

                        

                        /blog/using-mermaid-js-to-generate-flow-charts/images/Dark/mermaid-diagram.png
                        "
                        media="(prefers-color-scheme: dark)"
                    /><source 
                    srcset="
                    
                    
                    

                    

                    

                    /blog/using-mermaid-js-to-generate-flow-charts/images/mermaid-diagram.png
                    " 
                />
                
                <img alt="mermaid - flow chart" 
                        src="/blog/using-mermaid-js-to-generate-flow-charts/images/mermaid-diagram.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<p>mermaid-js supports generating</p>
<ul>
<li>Flow Chart</li>
<li>Sequence Diagram</li>
<li>Class Diagram</li>
<li>State Diagram</li>
<li>Gantt Chart</li>
<li>Pie Chart</li>
<li>ER Diagram</li>
</ul>
<p>Documentation is available at <a href="https://mermaid-js.github.io/mermaid"target="_blank">https://mermaid-js.github.io/mermaid</a>.</p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Building this website using open-source tools and hosting it for free</title>
      <link>https://patelhiren.com/blog/website-built-with-open-source-and-hosted-for-free/</link>
      <pubDate>Sat, 18 Apr 2020 16:08:20 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/website-built-with-open-source-and-hosted-for-free/</guid>
      <description>&lt;p&gt;For a while, I have been considering building a website to document things I learn. This year I decided to stop procsanating and get started with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introducing &lt;a href=&#34;https://patelhiren.com&#34;title=&#34;Hiren Patel&amp;#39;s Blog&#34;target=&#34;_blank&#34;&gt;patelhiren.com&lt;/a&gt; in all its glory. ð&lt;/strong&gt;&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>For a while, I have been considering building a website to document things I learn. This year I decided to stop procsanating and get started with it.</p>
<p><strong>Introducing <a href="https://patelhiren.com"title="Hiren Patel&#39;s Blog"target="_blank">patelhiren.com</a> in all its glory. ð</strong></p>
<h2 id="goals">Goals</h2>
<p>For this site I had a few basic goals in mind.</p>
<ul>
<li>It should serve as a log to help me remember and reivew how I did things. I hope that others may find it helpful as well.</li>
<li>The website should be fast and light. Should not be overburdened with Javascript.</li>
<li>Should be able to host website with a simple webserver. No server side software should be necessary.</li>
<li>Allowed me to keep my content in a standard text + image format for easy parsing even when not viewing via a browser. I did not want my content to be stored in binary formats in a database. I want it to be stored in plain text files on the filesystem.</li>
<li>Support code syntax highlighting.</li>
<li>Support SSL encryption on the website.</li>
<li>Support emoji.</li>
</ul>
<p>The above goals meant I was going to be building a Static Site using one of the many <a href="https://www.staticgen.com"target="_blank">Static Site Generator Tools</a></p>
<h2 id="tools">Tools</h2>
<p>After deciding I wanted a static site, I researched the various <a href="https://www.staticgen.com"target="_blank">Static Site Generator Tools</a> and settled on <a href="https://gohugo.io"target="_blank"><em>Hugo</em></a> as my choice.</p>
<p>Hugo written in <a href="https://golang.org"target="_blank">Go</a>, is highly reviewed and praised for its speed of site generation. It supports macOS (my primary OS of choice), Windows, Linux, OpenBSD and FreeBSD. It has a very well documented site and looks to have an active community developing and supporting it. It allows me to create my content in <a href="https://daringfireball.net/projects/markdown/"target="_blank">Markdown</a> syntax thus allowing me to keep it in plain text on the filesystem. It also supports code syntax highlighting and emoji ð. You can check details of Hugo&rsquo;s Makrdown support at <a href="https://www.markdownguide.org/tools/hugo/"target="_blank">markdownguide.org</a></p>
<p>Hugo supports a variety of <a href="https://themes.gohugo.io"target="_blank">Themes</a>. I settled on <a href="https://themes.gohugo.io/hugo-notepadium/"target="_blank">Notepadium</a> because it provided most of what I wanted out of box. I plan to customize it a bit to my liking as I learn more.</p>
<h2 id="hosting">Hosting</h2>
<p>For hosting I decided to use <a href="https://pages.github.com"target="_blank">GitHub Pages</a>. GitHub Pages is free, supports SSL and provides automatic CDN for serving fast webpages closer to your user. It also had the added benefit of having my generated site auotmatically have commit history and remote backup.</p>
<h2 id="installing-hugo-and-building-your-site">Installing Hugo and Building your site</h2>
<p>I use macOS as my primary OS so these steps are for for the Mac. However the steps should be very similar if you are using any other supported OS. <a href="https://brew.sh"target="_blank">Homebrew</a> and <em>git</em> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> is expected to be installed before you follow the rest of the steps.</p>
<p>Install Hugo</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">brew install hugo
</span></span></code></pre></td></tr></table>
</div>
</div><p>To verify the install run</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo version
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create your new site</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo new site patelhiren.com
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add the <em><a href="https://themes.gohugo.io/hugo-notepadium/"target="_blank">Notepadium</a></em> Theme</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="nb">cd</span> patelhiren.com
</span></span><span class="line"><span class="cl">git init
</span></span><span class="line"><span class="cl">git submodule add https://github.com/cntrump/hugo-notepadium themes/notepadium
</span></span></code></pre></td></tr></table>
</div>
</div><p>Activate the theme for your site by adding it to the <em>config.toml</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;theme = &#34;notepadium&#34;&#39;</span> &gt;&gt; config.toml
</span></span></code></pre></td></tr></table>
</div>
</div><p>Create a new post <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo new blog/my-first-post/index.md
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can find your content under <em>content</em> folder. You can open the newly created index.md file in any Markdown editor of choice <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> and edit and save your content. Here is an example post to suggest what&rsquo;s possible.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">title: &#34;My First Post&#34;
</span></span><span class="line"><span class="cl">description: &#34;This is my first post in Hugo. This shows up in Google search.&#34;
</span></span><span class="line"><span class="cl">date: 2020-04-18T16:08:20-04:00
</span></span><span class="line"><span class="cl">draft: true
</span></span><span class="line"><span class="cl">tags: [
</span></span><span class="line"><span class="cl">    &#34;Tag 1&#34;,
</span></span><span class="line"><span class="cl">    &#34;Tag 2&#34;
</span></span><span class="line"><span class="cl">]
</span></span><span class="line"><span class="cl">categories: [
</span></span><span class="line"><span class="cl">    &#34;Category 1&#34;,
</span></span><span class="line"><span class="cl">    &#34;Category 2&#34;
</span></span><span class="line"><span class="cl">]
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Hello everyone welcome to you website.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;!--more--&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">This is the extended content of my first post.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once you save your content you can test it locally by activating Hugo local web server.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo server -D
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can navigate to your local site at <a href="http://localhost:1313/"target="_blank">http://localhost:1313/</a>.</p>
<p>Edit you <em>config.toml</em> to configure the rest of your site settings. Here is mine.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="nx">baseURL</span> <span class="p">=</span> <span class="s2">&#34;https://patelhiren.com/&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">languageCode</span> <span class="p">=</span> <span class="s2">&#34;en-us&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">title</span> <span class="p">=</span> <span class="s2">&#34;Hiren Patel&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">theme</span> <span class="p">=</span> <span class="s2">&#34;notepadium&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">copyright</span> <span class="p">=</span> <span class="s2">&#34;Â©2020 Hiren Patel.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">enableEmoji</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl"><span class="nx">enableRobotsTXT</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">markup</span><span class="p">.</span><span class="nx">highlight</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">codeFences</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl"><span class="nx">noClasses</span> <span class="p">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl"><span class="nx">linenos</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">markup</span><span class="p">.</span><span class="nx">goldmark</span><span class="p">.</span><span class="nx">renderer</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">unsafe</span> <span class="p">=</span> <span class="kc">true</span>  <span class="c"># enable raw HTML in Markdown</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;auto&#34;</span>  <span class="c"># default: auto. light: light theme, dark: dark theme, auto: based on system.</span>
</span></span><span class="line"><span class="cl"><span class="nx">dateFormat</span> <span class="p">=</span> <span class="s2">&#34;Jan 02, 2006&#34;</span>  <span class="c"># if unset, default is &#34;2006-01-02&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">readingTime</span> <span class="p">=</span> <span class="kc">false</span>  <span class="c"># show reading time after article date</span>
</span></span><span class="line"><span class="cl"><span class="nx">logo</span> <span class="p">=</span> <span class="s2">&#34;patelhiren-logo.png&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">slogan</span> <span class="p">=</span> <span class="s2">&#34;Documenting things as I learn.&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">assets</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">css</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;css/fonts.css&#34;</span><span class="p">,</span> <span class="s2">&#34;css/light.css&#34;</span><span class="p">,</span> <span class="s2">&#34;css/dark.css&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">comments</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">enable</span> <span class="p">=</span> <span class="kc">false</span>  <span class="c"># En/Disable comments globally, default: false. You can always enable comments on per page.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">share</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">enable</span> <span class="p">=</span> <span class="kc">false</span>  <span class="c"># En/Disable share globally, default: false. You can always enable share on per page.</span>
</span></span><span class="line"><span class="cl"><span class="nx">addThisId</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">inlineToolId</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">math</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">enable</span> <span class="p">=</span> <span class="kc">false</span> <span class="c"># load math globally, default: false. You can always enable math on per page.</span>
</span></span><span class="line"><span class="cl"><span class="nx">use</span> <span class="p">=</span> <span class="s2">&#34;katex&#34;</span>  <span class="c"># builtin: &#34;katex&#34;, &#34;mathjax&#34;.  default: &#34;katex&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">syntax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">use</span> <span class="p">=</span> <span class="s2">&#34;none&#34;</span>  <span class="c"># builtin: &#34;prismjs&#34;, &#34;hljs&#34;. &#34;none&#34; means Chroma</span>
</span></span><span class="line"><span class="cl"><span class="nx">theme</span> <span class="p">=</span> <span class="s2">&#34;xcode&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">darkTheme</span> <span class="p">=</span> <span class="s2">&#34;xcode-dark&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">nav</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">showCategories</span> <span class="p">=</span> <span class="kc">true</span>       <span class="c"># /categories/</span>
</span></span><span class="line"><span class="cl"><span class="nx">showTags</span> <span class="p">=</span> <span class="kc">true</span>             <span class="c"># /tags/</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>To build your static site run:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo -D
</span></span></code></pre></td></tr></table>
</div>
</div><p>The output will be saved under <em>./public/</em> directory. You may copy the contents of this folder to any webserver and your website will be servered.</p>
<h2 id="hosting-your-site-on-github-pages">Hosting your site on GitHub Pages</h2>
<ul>
<li>Create a repository to hold your Hugo content and source files on GitHub. Mine is called <em>patelhiren.com</em></li>
<li>Create a repository called <em>&lt;username&gt;.github.io</em>. Replace <em>&lt;username&gt;</em> with your GitHub username. Mine is called patelhiren.github.io.</li>
<li>Clone your source project via:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># adjust to match your git url.</span>
</span></span><span class="line"><span class="cl">git clone git@github.com:patelhiren/patelhiren.com.git
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>Paste your existing source files in the new repository folder.</p>
</li>
<li>
<p>Run and verify your local Hugo files from local repo by running <code>hugo server -D</code> and accessing the site at <a href="http://localhost:1313/"target="_blank">http://localhost:1313/</a>.</p>
</li>
<li>
<p>Once you are happy with the results:</p>
<ul>
<li>Press Ctrl+C to kill the server</li>
<li>Before proceeding completely remove the public directory</li>
</ul>
</li>
<li>
<p>Add your public site as a git submodule. Like so:</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># adjust to match your GitHub Pages repo</span>
</span></span><span class="line"><span class="cl">git submodule add -b master git@github.com:patelhiren/patelhiren.github.io.git
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="automating-the-deployment-process">Automating the deployment process</h3>
<p>Create a new file <code>deploy.sh</code> and set its contents to below script. This will allow you to run <code>deploy.sh</code> to build your site and deploy to GitHub in one go.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># If a command fails then the deploy stops</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> -e
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;\033[0;32mDeploying updates to GitHub...\033[0m\n&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Go To Public folder</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> public
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Discard local changes on public folder</span>
</span></span><span class="line"><span class="cl">git reset
</span></span><span class="line"><span class="cl">git checkout .
</span></span><span class="line"><span class="cl">git clean -fdx
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Pull the latest changes before updating</span>
</span></span><span class="line"><span class="cl">git checkout master
</span></span><span class="line"><span class="cl">git pull origin master
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ..
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Garbage collect hugo image-processing generated images.</span>
</span></span><span class="line"><span class="cl">hugo --gc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Build the project.</span>
</span></span><span class="line"><span class="cl">hugo <span class="c1"># if using a theme, replace with `hugo -t &lt;YOURTHEME&gt;`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Go To Public folder</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> public
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Add changes to git.</span>
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Commit changes.</span>
</span></span><span class="line"><span class="cl"><span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;rebuilding site </span><span class="k">$(</span>date<span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> -n <span class="s2">&#34;</span><span class="nv">$*</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">  <span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$*</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;</span><span class="nv">$msg</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Push source and build repos.</span>
</span></span><span class="line"><span class="cl">git push origin master
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Your site will then be available at <code>https://&lt;username&gt;.github.io</code>.</li>
</ul>
<h2 id="customizing-github-pages-to-use-a-custom-domain">Customizing GitHub pages to use a custom domain</h2>
<p>If you plan to use your own doamin instead of the &lt;username&gt;.github.io you need to follow the guide at <a href="https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site"target="_blank">Managing a custom domain for your GitHub Pages site</a>.</p>
<p>For my site I did the following:</p>
<ul>
<li>Create a file called <code>CNAME</code> and set its contents to <em>patelhiren.com</em>.</li>
<li>Added the <code>CNAME</code> file to the git repo at patelhiren.github.io.</li>
<li>Got to Repo Settings at <a href="https://github.com/patelhiren/patelhiren.github.io/settings"target="_blank">https://github.com/patelhiren/patelhiren.github.io/settings</a> and set <strong>Custom domain</strong> and <strong>Enforce HTTPS</strong> settings.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/01.png">
            <picture><source 
                    srcset="
                    
                    /blog/website-built-with-open-source-and-hosted-for-free/images/01_huea3a84d2fac8c8b9bdce239262285038_202577_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/website-built-with-open-source-and-hosted-for-free/images/01_huea3a84d2fac8c8b9bdce239262285038_202577_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/website-built-with-open-source-and-hosted-for-free/images/01_huea3a84d2fac8c8b9bdce239262285038_202577_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/website-built-with-open-source-and-hosted-for-free/images/01_huea3a84d2fac8c8b9bdce239262285038_202577_1000x0_resize_box_3.png 1200w,
                    

                    /blog/website-built-with-open-source-and-hosted-for-free/images/01.png
                    " 
                />
                
                <img alt="GitHub Pages Custom Domain Settings" 
                        src="/blog/website-built-with-open-source-and-hosted-for-free/images/01.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">GitHub Pages Custom Subdomain Settings</span>
    </span>
</span></a></p>
<h2 id="publishing-new-postchanges">Publishing new Post/Changes</h2>
<p>To publish a new post:</p>
<ul>
<li>Create a new post similar to to command below.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">hugo new blog/my-new-post/index.md
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>Set and edit your post using Markdown tools.</p>
</li>
<li>
<p>Run and verify your local Hugo files from local repo by running <code>hugo server -D</code> and accessing the site at <a href="http://localhost:1313/"target="_blank">http://localhost:1313/</a>.</p>
</li>
<li>
<p>Run <code>deploy.sh</code> to deploy your site.</p>
</li>
<li>
<p>Commit your changes to your source repo.</p>
</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>This is all that should be necessary. It looks like a lot of steps, but in practice it is very simple and doesn&rsquo;t require as much work to maintain for publishing new posts.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>For a git GUI, I prefer <a href="https://www.git-fork.com"target="_blank">Fork</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Creating a blog post this way with a folder as the post name allows you to keep images within the same folder instead of keeping images in the root folder. This felt like better grouping of content vs the default Hugo suggested way of generating new post via <em>hugo new blog/my-first-post</em>.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>I prefer <a href="https://code.visualstudio.com"target="_blank">Visual Studio Code</a>. Tip: If using Visual Studio Code you can press <em>CMD+K,V</em> to activate side-by-side live preview of the Markdown you are typing.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded>
      
    </item>
    
    <item>
      <title>PNG Crush Automator Action</title>
      <link>https://patelhiren.com/blog/pngcrush-automator-action/</link>
      <pubDate>Sun, 12 Apr 2020 22:04:30 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/pngcrush-automator-action/</guid>
      <description>&lt;p&gt;When using png files on the web it is often preferred to use tools like pngcrush on them to optimize their size. This is usually a manual process where a command line tool or website is used to process each image file. I decided to automate this process for me via macOS &lt;a href=&#34;https://support.apple.com/guide/automator/welcome/mac&#34;target=&#34;_blank&#34;&gt;Automator&lt;/a&gt;.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>When using png files on the web it is often preferred to use tools like pngcrush on them to optimize their size. This is usually a manual process where a command line tool or website is used to process each image file. I decided to automate this process for me via macOS <a href="https://support.apple.com/guide/automator/welcome/mac"target="_blank">Automator</a>.</p>
<p>To crush png images I use the opensource tool <a href="https://pmt.sourceforge.io/pngcrush/"target="_blank">PNG Crush</a>.</p>
<p>If you have <a href="https://developer.apple.com/xcode/"target="_blank">Xcode</a> installed, the pngcrush tool is included as a part of the iOS SDK and there is no additional download required.</p>
<p>If you do not have Xcode you may install <em>PNG Crush</em> via <a href="https://brew.sh"target="_blank">Homebrew</a> using the following command.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">brew install pngcrush
</span></span></code></pre></td></tr></table>
</div>
</div><p>If using Xcode method, the <em><strong>pngcrush</strong></em> binary will be at <code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush</code>.</p>
<p>If using Homebrew, the <em><strong>pngcrush</strong></em> binary will be at <code>/usr/local/bin/pngcrush</code></p>
<p>For the rest of the article I will assume the Homebrew method is used. You just need to adjust the paths for the binary if the Xcode method is used.</p>
<p>To crush a PNG image via Terminal you can run the below command.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="c1"># pngcrush will process the input.png and create a compressed crushed.png</span>
</span></span><span class="line"><span class="cl">pngcrush input.png crushed.png
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="automating-the-process-using-automator-on-macos">Automating the process using Automator on macOS.</h2>
<ul>
<li>Launch <em><strong>Automator</strong></em> via Spotlight Search.</li>
<li>Select <em>File</em>, <em>New</em> from the menu. Select <em><strong>Quick Action</strong></em> and click the <em>Choose</em> button.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/01.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/01_hu57fa4703ef8765fef9d7e6fd433a74fa_927894_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/pngcrush-automator-action/images/01_hu57fa4703ef8765fef9d7e6fd433a74fa_927894_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/pngcrush-automator-action/images/01_hu57fa4703ef8765fef9d7e6fd433a74fa_927894_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/pngcrush-automator-action/images/01_hu57fa4703ef8765fef9d7e6fd433a74fa_927894_1000x0_resize_box_3.png 1200w,
                    

                    /blog/pngcrush-automator-action/images/01.png
                    " 
                />
                
                <img alt="Automator - New" 
                        src="/blog/pngcrush-automator-action/images/01.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<ul>
<li>In the new windows that loads, select the options as below.
<ul>
<li>Workflow receives current - <em><strong>image files</strong></em></li>
<li>in - <em><strong>Finder.app</strong></em></li>
</ul>
</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/02.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/02_hu57fa4703ef8765fef9d7e6fd433a74fa_734562_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/pngcrush-automator-action/images/02_hu57fa4703ef8765fef9d7e6fd433a74fa_734562_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/pngcrush-automator-action/images/02_hu57fa4703ef8765fef9d7e6fd433a74fa_734562_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/pngcrush-automator-action/images/02_hu57fa4703ef8765fef9d7e6fd433a74fa_734562_1000x0_resize_box_3.png 1200w,
                    

                    /blog/pngcrush-automator-action/images/02.png
                    " 
                />
                
                <img alt="Automator - New Action" 
                        src="/blog/pngcrush-automator-action/images/02.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<ul>
<li>In the search box, type <em><strong>Shell</strong></em> and select the <em><strong>Run Shell Script</strong></em> option to add to the automation on the right by double clicking on it.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/03.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/03_hu57fa4703ef8765fef9d7e6fd433a74fa_483613_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/pngcrush-automator-action/images/03_hu57fa4703ef8765fef9d7e6fd433a74fa_483613_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/pngcrush-automator-action/images/03_hu57fa4703ef8765fef9d7e6fd433a74fa_483613_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/pngcrush-automator-action/images/03_hu57fa4703ef8765fef9d7e6fd433a74fa_483613_1000x0_resize_box_3.png 1200w,
                    

                    /blog/pngcrush-automator-action/images/03.png
                    " 
                />
                
                <img alt="Automator - Run Shell Script" 
                        src="/blog/pngcrush-automator-action/images/03.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<ul>
<li>Change the <em><strong>Pass Input</strong></em> option to <em><strong>as arguments</strong></em>.</li>
<li>Enter the below script commands in the Shell Script box.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl"><span class="k">for</span> f in <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Verify that the extension of the file is actually png</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (case insensitive compare)</span>
</span></span><span class="line"><span class="cl">  <span class="nv">filename</span><span class="o">=</span><span class="k">$(</span>basename <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">  <span class="nv">ext</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">filename</span><span class="p">##*.</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$ext</span><span class="s2">&#34;</span> <span class="p">|</span> grep -i png<span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># If the file is a png, run pngcrush on it.</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Save the output in the same place with a temporary extension</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># of .crushed_</span>
</span></span><span class="line"><span class="cl">    /usr/local/bin/pngcrush <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">.crushed_&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># Overwrite the original file with the crushed file.</span>
</span></span><span class="line"><span class="cl">    mv <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">.crushed_&#34;</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Save the automation as <em><strong>PNG Crush</strong></em>.</li>
</ul>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/04.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/04_hu57fa4703ef8765fef9d7e6fd433a74fa_894941_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/pngcrush-automator-action/images/04_hu57fa4703ef8765fef9d7e6fd433a74fa_894941_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/pngcrush-automator-action/images/04_hu57fa4703ef8765fef9d7e6fd433a74fa_894941_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/pngcrush-automator-action/images/04_hu57fa4703ef8765fef9d7e6fd433a74fa_894941_1000x0_resize_box_3.png 1200w,
                    

                    /blog/pngcrush-automator-action/images/04.png
                    " 
                />
                
                <img alt="Automator - Final Code" 
                        src="/blog/pngcrush-automator-action/images/04.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<p>You may now browse to any png file(s) in Finder and right click, select <em><strong>Services</strong></em> -&gt; <em><strong>PNG Crush</strong></em>.</p>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/05.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/05_hu66c66eef13015fd0d383e1d348905754_469811_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/pngcrush-automator-action/images/05_hu66c66eef13015fd0d383e1d348905754_469811_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/pngcrush-automator-action/images/05_hu66c66eef13015fd0d383e1d348905754_469811_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/pngcrush-automator-action/images/05_hu66c66eef13015fd0d383e1d348905754_469811_1000x0_resize_box_3.png 1200w,
                    

                    /blog/pngcrush-automator-action/images/05.png
                    " 
                />
                
                <img alt="Finder - Services Menu" 
                        src="/blog/pngcrush-automator-action/images/05.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>
<p>While the automation is running you will see a spinning cog in you Menu bar in the top right. When the cog disappears the automation is done and your images have been processed by <em><strong>pngcrush</strong></em>.</p>
<p>

<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/06.png">
            <picture><source 
                    srcset="
                    
                    /blog/pngcrush-automator-action/images/06_hu199dd5201849aa5e82e86ff561cd249f_36199_400x0_resize_box_3.png 400w,
                    
                    
                    

                    

                    

                    /blog/pngcrush-automator-action/images/06.png
                    " 
                />
                
                <img alt="Finder - Automator Running" 
                        src="/blog/pngcrush-automator-action/images/06.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title"></span>
    </span>
</span></a></p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Catalina and Skype for Business Screensharing</title>
      <link>https://patelhiren.com/blog/catalina-and-skype-for-business-screensharing/</link>
      <pubDate>Fri, 10 Apr 2020 20:11:49 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/catalina-and-skype-for-business-screensharing/</guid>
      <description>&lt;p&gt;After upgrading to macOS Catalina (10.15.4), Screensharing via Skype for Business stopped working. Here is waht I did to fix it.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>After upgrading to macOS Catalina (10.15.4), Screensharing via Skype for Business stopped working. Here is waht I did to fix it.</p>
<p>macOS Catalina introduced new Privacy settings that prevents Skype for Business screensharing to work if proper permissions are not provided. On trying to start Screensharing via <strong>Conversations-&gt;Share Screen</strong> option, Skype would display a message stating check the <strong>Skype For Business</strong> option under <strong>System Preferences-&gt;Security &amp; Privacy-&gt;Privacy Tab-&gt;Screen Recording</strong>. However navigating there did not display &ldquo;Skype For Business* as an option.</p>
<p>To correct it I first reset the &ldquo;Screen Recording&rdquo; permissions for Skype by running this command on Terminal.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">tccutil reset ScreenCapture com.microsoft.SkypeForBusiness
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>If you do not provide the <strong>com.microsoft.SkypeForBusiness</strong> identifier, the Screen Recording permissions for all apps will be reset and you will have to provide permissions again as needed.</p>
</blockquote>
<p>After running that command. I relaunched Skype, selected a Conversation and tried sharing via the screen via the menu option again. I got the same error I got earlier from Skype and no Screen Recording permission prompt was displayed by the OS.</p>
<p>I had to select the &ldquo;Share Screen&rdquo; icon on the top right of the conversation window. When I tapped that, the OS permissions prompt for Screen Recording came up. I gave the required permission, restarted Skype and was successfully able to share my screen.</p>
<p><em>For the record this was on Skype for Business version 16.28.175.</em></p>]]></content:encoded>
      
    </item>
    
    <item>
      <title>Boot Camp on External Drive</title>
      <link>https://patelhiren.com/blog/boot-camp-on-external-drive/</link>
      <pubDate>Mon, 06 Apr 2020 14:02:10 -0400</pubDate>
      
      <guid>https://patelhiren.com/blog/boot-camp-on-external-drive/</guid>
      <description>&lt;p&gt;I had a spare SSD and a USB enclosure for it. Installing windows on an external drive is unsupported by Microsoft and the setup will abort stating Windows cannot be installed on an external drive. Here is how I managed to install Windows 10 Pro on the external SSD and boot from it on my iMac.&lt;/p&gt;</description>
      
      <content:encoded><![CDATA[<p>I had a spare SSD and a USB enclosure for it. Installing windows on an external drive is unsupported by Microsoft and the setup will abort stating Windows cannot be installed on an external drive. Here is how I managed to install Windows 10 Pro on the external SSD and boot from it on my iMac.</p>
<h6 id="my-environment">My Environment</h6>
<ul>
<li>27-inch iMac 2019, running macOS Catalina 10.15.4</li>
<li>120 GB ScanDisk Plus SSD</li>
<li>2.5-inch SATA USB enclosure</li>
</ul>
<h6 id="software-needed">Software needed</h6>
<ul>
<li>VMware Fusion 11.5.3 (Trial is fine)</li>
<li>Windows 10 ISO</li>
</ul>
<h6 id="directions">Directions</h6>
<ul>
<li>Launch Disk Utility and select the plugged in SSD. Format as below


<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/01.png">
            <picture>

                    <source 
                        srcset="
                        
                        /blog/boot-camp-on-external-drive/images/Dark/01_hu35b83139b4b9a667c482960666e96ba3_414407_400x0_resize_box_3.png 400w,
                        
                        
                        
                        /blog/boot-camp-on-external-drive/images/Dark/01_hu35b83139b4b9a667c482960666e96ba3_414407_600x0_resize_box_3.png 600w,
                        

                        
                        /blog/boot-camp-on-external-drive/images/Dark/01_hu35b83139b4b9a667c482960666e96ba3_414407_800x0_resize_box_3.png 1000w,
                        

                        
                        /blog/boot-camp-on-external-drive/images/Dark/01_hu35b83139b4b9a667c482960666e96ba3_414407_1000x0_resize_box_3.png 1200w,
                        

                        /blog/boot-camp-on-external-drive/images/Dark/01.png
                        "
                        media="(prefers-color-scheme: dark)"
                    /><source 
                    srcset="
                    
                    /blog/boot-camp-on-external-drive/images/01_hu35b83139b4b9a667c482960666e96ba3_425087_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/boot-camp-on-external-drive/images/01_hu35b83139b4b9a667c482960666e96ba3_425087_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/boot-camp-on-external-drive/images/01_hu35b83139b4b9a667c482960666e96ba3_425087_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/boot-camp-on-external-drive/images/01_hu35b83139b4b9a667c482960666e96ba3_425087_1000x0_resize_box_3.png 1200w,
                    

                    /blog/boot-camp-on-external-drive/images/01.png
                    " 
                />
                
                <img alt="DiskUtility - Format Disk Settings" 
                        src="/blog/boot-camp-on-external-drive/images/01.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Disk Utility - Format Disk</span>
    </span>
</span></a></li>
<li>Make a note of the Disk Id. In my case it was <code>disk5</code></li>
<li>Create a new Windows 10 Virtual Machine under VMware Fusion.</li>
<li>Delete the default Disk the VMware Fusion creates when setting up the machine.</li>
<li>Exit VMware Fusion and launch Terminal and run the following command. Adjust the Virtual Manchine path as needed.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">/Applications/VMware<span class="se">\ </span>Fusion.app/Contents/Library/vmware-rawdiskCreator <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>create /dev/disk5 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>fullDevice ~/Virtual<span class="se">\ </span>Machines.localized/Boot<span class="se">\ </span>Camp.vmwarevm/external-hdd <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>ide
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Open <code>Boot Camp.vmx</code> file in a text editor like Visual Studio Code and add the below lines.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="na">ide1:0.present</span> <span class="o">=</span> <span class="s">&#34;TRUE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="na">ide1:0.fileName</span> <span class="o">=</span> <span class="s">&#34;external-hdd.vmdk&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>If you are running macOS Catalina you will need to give <code>Full Disk Access</code> Permissions to <code>com.vmware.DiskHelper</code>. If you do not see it in the list. Try to start the Virtual Machine. You will get an error starting after which the item will show up in the list.


<span class="image-container">
    <span class="link">
        <a target="_blank" rel="noopener noreferrer" href="images/02.png">
            <picture>

                    <source 
                        srcset="
                        
                        /blog/boot-camp-on-external-drive/images/Dark/02_hue427cd9cd612b4146ee4473fcbd27411_373608_400x0_resize_box_3.png 400w,
                        
                        
                        
                        /blog/boot-camp-on-external-drive/images/Dark/02_hue427cd9cd612b4146ee4473fcbd27411_373608_600x0_resize_box_3.png 600w,
                        

                        
                        /blog/boot-camp-on-external-drive/images/Dark/02_hue427cd9cd612b4146ee4473fcbd27411_373608_800x0_resize_box_3.png 1000w,
                        

                        
                        /blog/boot-camp-on-external-drive/images/Dark/02_hue427cd9cd612b4146ee4473fcbd27411_373608_1000x0_resize_box_3.png 1200w,
                        

                        /blog/boot-camp-on-external-drive/images/Dark/02.png
                        "
                        media="(prefers-color-scheme: dark)"
                    /><source 
                    srcset="
                    
                    /blog/boot-camp-on-external-drive/images/02_hu423960d78e17f636e1808ef9e342d8c7_393400_400x0_resize_box_3.png 400w,
                    
                    
                    
                    /blog/boot-camp-on-external-drive/images/02_hu423960d78e17f636e1808ef9e342d8c7_393400_600x0_resize_box_3.png 600w,
                    

                    
                    /blog/boot-camp-on-external-drive/images/02_hu423960d78e17f636e1808ef9e342d8c7_393400_800x0_resize_box_3.png 1000w,
                    

                    
                    /blog/boot-camp-on-external-drive/images/02_hu423960d78e17f636e1808ef9e342d8c7_393400_1000x0_resize_box_3.png 1200w,
                    

                    /blog/boot-camp-on-external-drive/images/02.png
                    " 
                />
                
                <img alt="Security &amp;amp; Privacy - Full Disk Access" 
                        src="/blog/boot-camp-on-external-drive/images/02.png" />
            </picture>
        </a>
    </span>
    <span class="caption">
        <span class="title">Security & Privacy - Full Disk Access</span>
    </span>
</span></a></li>
<li>Quit and Restart VMWare fusion. Start the Boot Camp vm. You will be prompted for you admin password.</li>
<li>Once the VM starts boot off the Windows 10 ISO and install Windows 10 on the attached disk. Delete all partitions on the disk during install and let windows create new partitions as needed.</li>
<li>Once the install is fully finished, install VMware Tools to help facilitate copying of files.</li>
<li>On the Mac launch <code>Boot Camp Assistant.app</code>. From the <code>Action</code> menu select <code>Download Windows Support Software</code>. Follow the steps to get the Boot Camp windows drivers.</li>
<li>Copy the Drivers to the Windows machine. Shutdown the VM.</li>
<li>You may now reboot into the windows partition by rebooting the Mac and holding down the Option key during boot.</li>
<li>After Windows boots up, you will have to install the Boot Camp drivers by launching BootCamp setup from the <code>WindowsSupport\BootCamp\Setup.exe</code> folder.</li>
</ul>
<h6 id="additional-steps">Additional Steps</h6>
<ul>
<li>After installation of the Boot Camp drivers and reboot, Windows still had a few missing drivers under Device Manager. All I had to do was select <code>Update Driver</code> and select the <code>WindowsSupport\$WinPEDriver$</code> folder to look for drivers.</li>
<li>Speakers were not working properly on the 2019 iMac even though all drivers were installed. I had to go to <code>Device Manager</code>-&gt;<code>Sound, video and game controllers</code>-&gt;<code>High Definition Audio Device</code>. Select Update driver and point it to <code>WindowsSupport\$WinPEDriver$\Cirrus</code>. This installed the correct drivers and the Speakers started working.</li>
<li>Another speed bump I ran into was that after a few Windows updates were applied windows declined to update to the November 2019 update stating installing Windows on External USB is unsupported. ð I had to go to the Registry at <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control</code> and set the <code>PortableOperatingSystem</code> value to <code>0</code> and reboot. After that the update installed ok. ð</li>
</ul>]]></content:encoded>
      
    </item>
    
  </channel>
</rss>